services:
  api-gateway:
    build: ./api-gateway
    environment:
      JWT_SECRET: your-strong-secret-key  # Must match other services
    ports:
      - "8080:8080"
    depends_on:
      - auth-db
      - todo-db
      - notification-db

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    depends_on:
      auth-db:
        condition: service_healthy
    environment:
      DB_HOST: auth-db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: auth
      DB_PORT: 5432
      JWT_SECRET: your-strong-secret-key

  todo-service:
    build: ./todo-service
    ports:
      - "8082:8082"
    depends_on:
      - todo-db
    environment:
      DB_HOST: todo-db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: todo
      DB_PORT: 5432
      JWT_SECRET: your-strong-secret-key

  nats:
    image: nats:latest
    ports:
      - "4222:4222"

  notification-service:
    build: ./notification-service
    ports:
      - "8083:8083"
    depends_on:
      - notification-db
    environment:
      NATS_URL: nats://nats:4222

  auth-db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - auth-data:/var/lib/postgresql/data

  todo-db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo
    ports:
      - "5433:5432"
    volumes:
      - todo-data:/var/lib/postgresql/data

  notification-db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notification
    ports:
      - "5434:5432"
    volumes:
      - notification-data:/var/lib/postgresql/data

volumes:
  auth-data:
  todo-data:
  notification-data: