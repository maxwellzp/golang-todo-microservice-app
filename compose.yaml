services:
  api-gateway:
    build: ./api-gateway
    env_file:
      - ./api-gateway/.env
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - todo-service
      - notification-service

  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    env_file:
      - ./auth-service/.env
    depends_on:
      auth-db:
        condition: service_healthy

  todo-service:
    build: ./todo-service
    ports:
      - "8082:8082"
    env_file:
      - ./todo-service/.env
    depends_on:
      todo-db:
        condition: service_healthy

  notification-service:
    build: ./notification-service
    ports:
      - "8083:8083"
    env_file:
      - ./notification-service/.env
    depends_on:
      notification-db:
        condition: service_healthy

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata-auth:/var/lib/postgresql/data
    # Uncomment if you want to connect from host (e.g., pgAdmin)
    # ports:
    #   - "127.0.0.1:5432:5432"

  todo-db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata-todo:/var/lib/postgresql/data
    # ports:
    #   - "127.0.0.1:5433:5432"

  notification-db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notification
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata-notification:/var/lib/postgresql/data
    # ports:
    #   - "127.0.0.1:5434:5432"

volumes:
  pgdata-auth:
  pgdata-todo:
  pgdata-notification:
